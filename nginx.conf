worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;  # Cache la version de Nginx

    log_format json_combined escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';

    access_log /dev/stdout json_combined;
    error_log /dev/stderr warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    gzip on;
    gzip_disable "msie6";
    gzip_min_length 256;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 8443;
        server_name ton-domaine.com;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires 0;
        }

        location /api/ {
            proxy_pass http://172.17.231.190:8080/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;

            if ($request_method !~ ^(GET|POST|PUT)$) {
                return 405;
            }

            proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Strict";
        }

        location /ws {
            proxy_pass http://172.17.231.190:8080/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location ~* \.(?:ico|css|js|gif|jpg|jpeg|png|svg|woff|woff2|ttf|otf|eot|json)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public, max-age=15552000, immutable";
            add_header Access-Control-Allow-Origin "*" always;
        }

        error_page 400 401 403 404 500 502 503 504 /error.json;

        location = /error.json {
            return 200 '{"error":"Une erreur est survenue. Veuillez réessayer plus tard."}';
            add_header Content-Type application/json;
        }

        # Protection avancée contre les attaques
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' 'sha256-<hash_script>';
            style-src 'self' 'sha256-<hash_style>';
            object-src 'none';
            img-src 'self' data:;
            frame-ancestors 'none';
        " always;

        proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Strict";

        location ~ /\.(?!well-known) {
            deny all;
        }
    }
}
